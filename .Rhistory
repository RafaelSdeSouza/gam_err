fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
set.seed(30)
n <- 1500
m <- 1 ## no replicates
k <- 30
GRID <- 200
#=== true X's
X1true <- sort(rnorm(n,0,1))
X2true <- sort(rnorm(n,3,1))
#=== true functions
m1function <- function(x){
f <- sin(pi*(x/2))/(1+(2*(x^2)*(sign(x)+1)))
return(f)}
m2function <- function(x){
f <- (1/2)*exp(-(1/2)*((x-3)^2))
return(f)}
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.3)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,k=30)+s(X2true,k=30),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
set.seed(30)
n <- 5000
m <- 1 ## no replicates
k <- 30
GRID <- 200
#=== true X's
X1true <- sort(rnorm(n,0,1))
X2true <- sort(rnorm(n,3,1))
#=== true functions
m1function <- function(x){
f <- sin(pi*(x/2))/(1+(2*(x^2)*(sign(x)+1)))
return(f)}
m2function <- function(x){
f <- (1/2)*exp(-(1/2)*((x-3)^2))
return(f)}
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.3)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,k=30)+s(X2true,k=30),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=30)+s(X2true,bs="cr",k=30),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
library(fda)
library(mgcv)
library(Matrix)
require("plot3D")
#####################
## Generating data ##
#####################
set.seed(30)
n <- 1000
m <- 1 ## no replicates
k <- 30
GRID <- 200
#=== true X's
X1true <- sort(rnorm(n,0,1))
X2true <- sort(rnorm(n,3,1))
#=== true functions
m1function <- function(x){
f <- sin(pi*(x/2))/(1+(2*(x^2)*(sign(x)+1)))
return(f)}
m2function <- function(x){
f <- (1/2)*exp(-(1/2)*((x-3)^2))
return(f)}
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.3)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=30)+s(X2true,bs="cr",k=30),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=10)+s(X2true,bs="cr",k=10),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.1)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=15)+s(X2true,bs="cr",k=15),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
rnorm(n,mean=0,sd=.1)
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.01)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=15)+s(X2true,bs="cr",k=15),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
GRID <- 200
#=== true X's
X1true <- sort(rnorm(n,0,10))
X2true <- sort(rnorm(n,3,10))
#=== true functions
m1function <- function(x){
f <- sin(pi*(x/2))/(1+(2*(x^2)*(sign(x)+1)))
return(f)}
m2function <- function(x){
f <- (1/2)*exp(-(1/2)*((x-3)^2))
return(f)}
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.01)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=15)+s(X2true,bs="cr",k=15),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
set.seed(30)
n <- 1000
m <- 1 ## no replicates
k <- 30
GRID <- 200
#=== true X's
X1true <- sort(rnorm(n,0,1))
X2true <- sort(rnorm(n,3,1))
#=== true functions
m1function <- function(x){
f <- sin(pi*(x/2))/(1+(2*(x^2)*(sign(x)+1)))
return(f)}
m2function <- function(x){
f <- (x-3)^2)
return(f)}
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.01)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=15)+s(X2true,bs="cr",k=15),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
set.seed(30)
n <- 1000
m <- 1 ## no replicates
k <- 30
GRID <- 200
#=== true X's
X1true <- sort(rnorm(n,0,1))
X2true <- sort(rnorm(n,3,1))
#=== true functions
m1function <- function(x){
f <- sin(pi*(x/2))/(1+(2*(x^2)*(sign(x)+1)))
return(f)}
m2function <- function(x){
f <- (x-3)^2
return(f)}
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
#=== generating Y as an additive model
Y <- m1function(X1true) + m2function(X2true) + rnorm(n,mean=0,sd=.01)
#=== only W1 and W2 are observed
sd_u1 <- round(rnorm(n,mean=0.8,sd=0.2),2)
sd_u2 <- round(rnorm(n,mean=1,sd=0.2),2)
W1 <- sapply(X1true,rnorm,n=m,sd=sd_u1) #no replicates, m=1
W2 <- sapply(X2true,rnorm,n=m,sd=sd_u2) #no replicates, m=1
#### End of generating data
#### Testing gam function versus B-splines
data_test <- as.data.frame(cbind(Y, X1true, X2true))
b <- gam(Y~s(X1true,bs="cr",k=15)+s(X2true,bs="cr",k=15),data=data_test,method="REML")
summary(b)
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1.pred) + m2function(x2.pred),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
y.true <- matrix(m1function(x1x2$X1true) + m2function(x1x2$X2true),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
par(mfrow=c(2,1))
plot(b,all.terms=TRUE,scheme=c(2,1))
par(mfrow=c(1,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
par(mfrow=c(2,2))
plot(X1true,m1function(X1true),type="l")
plot(X2true,m2function(X2true),type="l")
plot(b,all.terms=TRUE,scheme=c(2,1))
# predict values on regular xy grid
grid.lines = 50
x1.pred <- seq(1.01*min(X1true), 0.99*max(X1true), length.out = grid.lines)
x2.pred <- seq(1.01*min(X2true), 0.99*max(X2true), length.out = grid.lines)
x1x2 <- expand.grid( X1true = x1.pred, X2true = x2.pred)
y.pred <- matrix(predict(b, newdata = x1x2,type="response"),
nrow = grid.lines, ncol = grid.lines)
y.true <- matrix(m1function(x1x2$X1true) + m2function(x1x2$X2true),
nrow = grid.lines, ncol = grid.lines)
# fitted points for droplines to surface
fitpoints <- predict(b,type="response")
par(mfrow=c(1,2))
persp3D(x=x1.pred, y=x2.pred, z = y.true ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
persp3D(x=x1.pred, y=x2.pred, z= y.pred ,   cex = 1, cex.lab=1.5,type="p",pch = 19,alpha=0.5,
theta = 30, phi = 30, ticktype = "detailed",col="red",bty = "b2",
xlab="x1",
ylab="x2",
zlab="y")
